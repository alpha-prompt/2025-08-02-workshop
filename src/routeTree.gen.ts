/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DemoToolConfusionRouteImport } from './routes/demo-tool-confusion'
import { Route as DemoTokenizersRouteImport } from './routes/demo-tokenizers'
import { Route as DemoSecurityRouteImport } from './routes/demo-security'
import { Route as DemoPortfolioRouteImport } from './routes/demo-portfolio'
import { Route as DemoPdfRouteImport } from './routes/demo-pdf'
import { Route as DemoMathRouteImport } from './routes/demo-math'
import { Route as DemoKnowledgeRouteImport } from './routes/demo-knowledge'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as ApiPortfolioServerRouteImport } from './routes/api/portfolio'
import { ServerRoute as ApiPdfServerRouteImport } from './routes/api/pdf'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api/chat'
import { ServerRoute as ApiPortfolioResetServerRouteImport } from './routes/api/portfolio.reset'

const rootServerRouteImport = createServerRootRoute()

const DemoToolConfusionRoute = DemoToolConfusionRouteImport.update({
  id: '/demo-tool-confusion',
  path: '/demo-tool-confusion',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTokenizersRoute = DemoTokenizersRouteImport.update({
  id: '/demo-tokenizers',
  path: '/demo-tokenizers',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoSecurityRoute = DemoSecurityRouteImport.update({
  id: '/demo-security',
  path: '/demo-security',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoPortfolioRoute = DemoPortfolioRouteImport.update({
  id: '/demo-portfolio',
  path: '/demo-portfolio',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoPdfRoute = DemoPdfRouteImport.update({
  id: '/demo-pdf',
  path: '/demo-pdf',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoMathRoute = DemoMathRouteImport.update({
  id: '/demo-math',
  path: '/demo-math',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoKnowledgeRoute = DemoKnowledgeRouteImport.update({
  id: '/demo-knowledge',
  path: '/demo-knowledge',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiPortfolioServerRoute = ApiPortfolioServerRouteImport.update({
  id: '/api/portfolio',
  path: '/api/portfolio',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiPdfServerRoute = ApiPdfServerRouteImport.update({
  id: '/api/pdf',
  path: '/api/pdf',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiPortfolioResetServerRoute = ApiPortfolioResetServerRouteImport.update({
  id: '/reset',
  path: '/reset',
  getParentRoute: () => ApiPortfolioServerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo-knowledge': typeof DemoKnowledgeRoute
  '/demo-math': typeof DemoMathRoute
  '/demo-pdf': typeof DemoPdfRoute
  '/demo-portfolio': typeof DemoPortfolioRoute
  '/demo-security': typeof DemoSecurityRoute
  '/demo-tokenizers': typeof DemoTokenizersRoute
  '/demo-tool-confusion': typeof DemoToolConfusionRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo-knowledge': typeof DemoKnowledgeRoute
  '/demo-math': typeof DemoMathRoute
  '/demo-pdf': typeof DemoPdfRoute
  '/demo-portfolio': typeof DemoPortfolioRoute
  '/demo-security': typeof DemoSecurityRoute
  '/demo-tokenizers': typeof DemoTokenizersRoute
  '/demo-tool-confusion': typeof DemoToolConfusionRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo-knowledge': typeof DemoKnowledgeRoute
  '/demo-math': typeof DemoMathRoute
  '/demo-pdf': typeof DemoPdfRoute
  '/demo-portfolio': typeof DemoPortfolioRoute
  '/demo-security': typeof DemoSecurityRoute
  '/demo-tokenizers': typeof DemoTokenizersRoute
  '/demo-tool-confusion': typeof DemoToolConfusionRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo-knowledge'
    | '/demo-math'
    | '/demo-pdf'
    | '/demo-portfolio'
    | '/demo-security'
    | '/demo-tokenizers'
    | '/demo-tool-confusion'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo-knowledge'
    | '/demo-math'
    | '/demo-pdf'
    | '/demo-portfolio'
    | '/demo-security'
    | '/demo-tokenizers'
    | '/demo-tool-confusion'
  id:
    | '__root__'
    | '/'
    | '/demo-knowledge'
    | '/demo-math'
    | '/demo-pdf'
    | '/demo-portfolio'
    | '/demo-security'
    | '/demo-tokenizers'
    | '/demo-tool-confusion'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoKnowledgeRoute: typeof DemoKnowledgeRoute
  DemoMathRoute: typeof DemoMathRoute
  DemoPdfRoute: typeof DemoPdfRoute
  DemoPortfolioRoute: typeof DemoPortfolioRoute
  DemoSecurityRoute: typeof DemoSecurityRoute
  DemoTokenizersRoute: typeof DemoTokenizersRoute
  DemoToolConfusionRoute: typeof DemoToolConfusionRoute
}
export interface FileServerRoutesByFullPath {
  '/api/chat': typeof ApiChatServerRoute
  '/api/pdf': typeof ApiPdfServerRoute
  '/api/portfolio': typeof ApiPortfolioServerRouteWithChildren
  '/api/portfolio/reset': typeof ApiPortfolioResetServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chat': typeof ApiChatServerRoute
  '/api/pdf': typeof ApiPdfServerRoute
  '/api/portfolio': typeof ApiPortfolioServerRouteWithChildren
  '/api/portfolio/reset': typeof ApiPortfolioResetServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chat': typeof ApiChatServerRoute
  '/api/pdf': typeof ApiPdfServerRoute
  '/api/portfolio': typeof ApiPortfolioServerRouteWithChildren
  '/api/portfolio/reset': typeof ApiPortfolioResetServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/chat'
    | '/api/pdf'
    | '/api/portfolio'
    | '/api/portfolio/reset'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/chat' | '/api/pdf' | '/api/portfolio' | '/api/portfolio/reset'
  id:
    | '__root__'
    | '/api/chat'
    | '/api/pdf'
    | '/api/portfolio'
    | '/api/portfolio/reset'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChatServerRoute: typeof ApiChatServerRoute
  ApiPdfServerRoute: typeof ApiPdfServerRoute
  ApiPortfolioServerRoute: typeof ApiPortfolioServerRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/demo-tool-confusion': {
      id: '/demo-tool-confusion'
      path: '/demo-tool-confusion'
      fullPath: '/demo-tool-confusion'
      preLoaderRoute: typeof DemoToolConfusionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo-tokenizers': {
      id: '/demo-tokenizers'
      path: '/demo-tokenizers'
      fullPath: '/demo-tokenizers'
      preLoaderRoute: typeof DemoTokenizersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo-security': {
      id: '/demo-security'
      path: '/demo-security'
      fullPath: '/demo-security'
      preLoaderRoute: typeof DemoSecurityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo-portfolio': {
      id: '/demo-portfolio'
      path: '/demo-portfolio'
      fullPath: '/demo-portfolio'
      preLoaderRoute: typeof DemoPortfolioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo-pdf': {
      id: '/demo-pdf'
      path: '/demo-pdf'
      fullPath: '/demo-pdf'
      preLoaderRoute: typeof DemoPdfRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo-math': {
      id: '/demo-math'
      path: '/demo-math'
      fullPath: '/demo-math'
      preLoaderRoute: typeof DemoMathRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo-knowledge': {
      id: '/demo-knowledge'
      path: '/demo-knowledge'
      fullPath: '/demo-knowledge'
      preLoaderRoute: typeof DemoKnowledgeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/portfolio': {
      id: '/api/portfolio'
      path: '/api/portfolio'
      fullPath: '/api/portfolio'
      preLoaderRoute: typeof ApiPortfolioServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/pdf': {
      id: '/api/pdf'
      path: '/api/pdf'
      fullPath: '/api/pdf'
      preLoaderRoute: typeof ApiPdfServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/portfolio/reset': {
      id: '/api/portfolio/reset'
      path: '/reset'
      fullPath: '/api/portfolio/reset'
      preLoaderRoute: typeof ApiPortfolioResetServerRouteImport
      parentRoute: typeof ApiPortfolioServerRoute
    }
  }
}

interface ApiPortfolioServerRouteChildren {
  ApiPortfolioResetServerRoute: typeof ApiPortfolioResetServerRoute
}

const ApiPortfolioServerRouteChildren: ApiPortfolioServerRouteChildren = {
  ApiPortfolioResetServerRoute: ApiPortfolioResetServerRoute,
}

const ApiPortfolioServerRouteWithChildren =
  ApiPortfolioServerRoute._addFileChildren(ApiPortfolioServerRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoKnowledgeRoute: DemoKnowledgeRoute,
  DemoMathRoute: DemoMathRoute,
  DemoPdfRoute: DemoPdfRoute,
  DemoPortfolioRoute: DemoPortfolioRoute,
  DemoSecurityRoute: DemoSecurityRoute,
  DemoTokenizersRoute: DemoTokenizersRoute,
  DemoToolConfusionRoute: DemoToolConfusionRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChatServerRoute: ApiChatServerRoute,
  ApiPdfServerRoute: ApiPdfServerRoute,
  ApiPortfolioServerRoute: ApiPortfolioServerRouteWithChildren,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
